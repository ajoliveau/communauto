{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Map.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onMount } from 'svelte';\nexport let center;\nexport let vehicles;\nexport let distance;\nlet markersArray;\nlet map;\n$: addVehiculeMarkers(vehicles, map);\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    initMap();\n}));\nfunction initMap() {\n    map = new google.maps.Map(document.getElementById('map'), {\n        center: center,\n        zoom: 15,\n        disableDefaultUI: true\n    });\n    const centerMarker = new google.maps.Marker({\n        map: map,\n        position: center\n    });\n    centerMarker.setIcon('https://maps.google.com/mapfiles/ms/icons/green-dot.png');\n    drawCircle();\n}\nfunction drawCircle() {\n    var cityCircle = new google.maps.Circle({\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map: map,\n        center: center,\n        radius: distance\n    });\n    return cityCircle;\n}\nfunction addVehiculeMarkers(vehicles, map, markersArray) {\n    vehicles.forEach(function (elem) {\n        const latlng = {\n            lat: parseFloat(elem.coords.latitude),\n            lng: parseFloat(elem.coords.longitude)\n        };\n        var marker = new google.maps.Marker({\n            position: latlng,\n            map: map\n        });\n        markersArray = [...markersArray, marker];\n        var infoWindow = new google.maps.InfoWindow({\n            content: createInfoWindow(elem)\n        });\n        marker.addListener('click', function () {\n            infoWindow.open(map, marker);\n        });\n        if (elem.good) {\n            marker.setIcon('https://maps.google.com/mapfiles/ms/icons/blue-dot.png');\n            // marker.setAnimation(google.maps.Animation.BOUNCE);                \n        }\n    });\n}\nfunction createInfoWindow(voiture) {\n    var resultat = '<div><b>' +\n        'Voiture ' + voiture.data.Name + ' ' + voiture.data.ModelName + '</b><br/>' +\n        'Distance : ' + voiture.distance + ' metres' +\n        '</div>' +\n        '<div class=\"book_LSI\" id=\"book_LSI_' + voiture.data.Id + '\"><a href=\"#\" onClick=\"javascript:BookLSI (\\'' + voiture.data.Id + '\\', \\'' + voiture.data.Name + '\\', \\'' + voiture.data.ModelName.toLowerCase() + '\\', \\'' + voiture.data.Immat + '\\', \\'XstrAddress2X\\', \\'Xcharge2X\\', \\'XnbrHourX\\', \\'' + voiture.coords.latitude + '\\', \\'' + voiture.coords.longitude + '\\');\">Sélectionner ce véhicule' + '</a></div>';\n    ;\n    return resultat;\n}\nfunction clearMarkers() {\n    markersArray = [];\n}\n</script>\n    \n    <style>\n#map {\n    height:80vh;\n    width: 90vw;\n}\n    </style>\n    \n    <div class=\"\">\n        <div id=\"map\" class=\"\"></div>            \n    </div>\n    "
  ],
  "names": [],
  "mappings": "AAmFA,IAAI,eAAC,CAAC,AACF,OAAO,IAAI,CACX,KAAK,CAAE,IAAI,AACf,CAAC"
}